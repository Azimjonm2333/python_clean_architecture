[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "python-clean-architecture"
version = "0.1.0"
description = "Python Clean Architecture Template"
authors = ["Azizjon <azizaliev2337@gmail.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0.6"
djangorestframework = "^3.14.0"
python-dotenv = "^1.0.0"
django-cors-headers = "^4.3.0"
pydantic = "^2.4.2"
drf-spectacular = "^0.27.2"
gunicorn = "^22.0.0"
psycopg2-binary = "^2.9.9"
requests = "^2.31.0"
punq = "^0.7.0"
py-automapper = "^1.2.3"
mediatr = "^1.3.2"
djangorestframework-simplejwt = "^5.3.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.5.0"
black = "^24.4.2"
pytest-django = "^4.5.2"
factory-boy = "^3.3.0"
pre-commit = "^3.5.0"
mypy = "^1.6.1"
django-stubs = "^5.0.2"


[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true


[tool.ruff]
line-length = 100
select = [
    "I001",
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
src = ["src", "tests"]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
target-version = "py311"
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "src/infrastructure/migrations"
]

[tool.ruff.isort]
known-first-party = ["django", "rest_framework"]


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "src.presentation.rest_api.config.settings.test"
python_files = ["test_*.py", "*_test.py", "tests/*.py"]